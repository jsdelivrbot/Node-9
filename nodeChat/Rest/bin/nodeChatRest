#!/usr/bin/env node

(function () {
  'use strict';

  let Bunyan = require('bunyan');

  let Sequelize = require('sequelize');

  function sequelizeInit(config) {
    return new Sequelize(config['database'], config['username'], config['password'], {
      host: config['host'],
      port: config['port'],
      protocol: config['protocol'],
      dialect: config['dialect'],
      pool: {
        maxConnections: 5,
        maxIdleTime: 30
      },
      timezone: '+00:00',
      logging: false
    });
  }

  let System = require('systemjs');
  require('./../config');

  function onReject(error) {
    setTimeout(function errorTime() {
      //throw error;
      console.log('start failed! ' + error);
    });
  }

  function loadConfig() {
    return new Promise(function(resolve, reject) {
      System.import('./config/example.json!').then(
        function importConfigResolved(config) {
          resolve(config);
        },
        reject
      );
    });
  }

  function resolveHost() {
    return new Promise(function(resolve, reject) {
      System.import('os').then(
        function importOsResolved(os) {
          System.import('dns').then(
            function importDnsResolved(dns) {
              let hostname = os.hostname();
              dns.lookup(hostname, function (error, address, family) {
                if (error) {
                  reject(error);
                } else {
                  resolve({ name: hostname, ip: address });
                }
              });
            },
            reject
          );
        },
        reject
      );
    });
  }

  function start(_server, sequelize) {
    if(Bunyan) {
      _server.start(Bunyan, sequelize).then(
        function serverStartResolved(server) {
          //
        },
        onReject
      );
    }
    else {
      console.log('Bunyan is not defined');
    }
  }

  loadConfig().then(
    function loadConfigResolved(config) {
      let sequelize = sequelizeInit(config['database']);
      sequelize.authenticate().then((val) => {
        if(val) {
          console.log(val);
        }
        else {
          console.log('DataBase connection: OK');
        }
      }, (err) => {
        console.log(err);
      });

      System.import('./index').then(
        function importIndexResolved(_server) {
          _server = _server.index;

          resolveHost().then(
            function hostResolved(host) {
              console.log('Local IP for `' + host.name + '`: ' + host.ip);
              start(_server, sequelize);
            },
            function hostRejected() {
              start(_server, sequelize);
            }
          );
        },
        onReject
      );
    },
    onReject
  );
})();
